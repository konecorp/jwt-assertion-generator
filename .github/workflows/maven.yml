name: Java CI

on: [push]

jobs:

  build-jar:
    runs-on: ubuntu-latest
    name: Build executable jar
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build and test project
        run: mvn clean verify
      - name: Set PROJECT_VERSION env variable
        shell: bash
        run: |
          echo "::set-env name=PROJECT_VERSION::$(mvn -q \
            -Dexec.executable=echo \
            -Dexec.args='${project.version}' \
            --non-recursive \
            exec:exec)"
      - name: Debug output project version
        shell: bash
        run: |
          echo "Project version: $PROJECT_VERSION"
      - name: Publish artifact
        uses: actions/upload-artifact@master
        with:
          name: jwt_assert-${{ env.PROJECT_VERSION }}.jar
          path: target/jwt_assert-${{ env.PROJECT_VERSION }}.jar

  build-native-ubuntu-mac:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: '19.3.0.2.java11'
      - run: java -version
      - run: gu install native-image
      - name: Build with Maven
        run: mvn -B package --file pom.xml -P build-native
      - name: Rename the artifact to OS-unique name
        shell: bash
        run: |
          ls -l target
          value=`cp target/net.majakorpi.jwt.jwtassertiongenerator target/jwtgen`
          chmod u+x target/jwtgen
      - name: Publish artifact
        uses: actions/upload-artifact@master
        with:
          name: jwtgen-${{ matrix.os }}
          path: target/jwtgen

  # build-native-windows:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [windows-2016, windows-latest]

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: DeLaGuardo/setup-graalvm@2.0
  #       with:
  #         graalvm-version: '19.3.0.2.java11'
  #     - run: java -version
  #     - run: echo $env:java_home
  #     - run: dir $env:java_home\bin
  #     - name: Set up Visual C Build Tools Workload for Visual Studio 2017 Build Tools
  #       run: |
  #         choco install visualstudio2017-workload-vctools
  #     - name: set env variables and run the Maven build
  #       shell: cmd
  #       run: |
  #         call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
  #         echo %JAVA_HOME%
  #         java -version
  #         mvn -X -B package --file pom.xml
  #     - name: build native image
  #       shell: cmd
  #       run: |
  #         call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
  #         %JAVA_HOME%\bin\native-image --enable-all-security-services -jar target\jwt_assert-*.jar
  #     - name: Rename the artifact to OS-unique name
  #       shell: bash
  #       run: |
  #         cp jwt_assert*.exe target/jwtgen.exe
  #     - name: Publish artifact
  #       uses: actions/upload-artifact@master
  #       with:
  #         name: jwtgen-${{ matrix.os }}
  #         path: target/jwtgen.exe
